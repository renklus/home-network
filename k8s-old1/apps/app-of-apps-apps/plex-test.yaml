apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: plex-test
  namespace: argocd
  finalizers:
  - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  source:
    repoURL: 'https://raw.githubusercontent.com/plexinc/pms-docker/gh-pages'
    chart: 'plex-media-server'
    targetRevision: '0.3.0'
    helm:
      parameters:
        - name: service.type
          value: LoadBalancer
        - name: service.port
          value: '32400'
        - name: rclone.enabled
          value: 'true'
        - name: rclone.configSecret
          value: backblaze-readwrite2
        - name: extraEnv.PLEX_CLAIM
          value: 'claim-GgsbQW3PLzn42zTg_Wky'
        - name: extraEnv.ALLOWED_NETWORKS
          value: 10.0.0.0/8
      valuesObject:
        image:
          registry: index.docker.io
          repository: plexinc/pms-docker
          tag: 1.40.0.7998-c29d4c0c8
        initContainer:
          image:
            registry: index.docker.io
            repository: alpine
            tag: 3.21.3@sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c
        rclone:
          image:
            registry: index.docker.io
            repository: rclone/rclone
            tag: 1.66.0
  destination:
    namespace: plex-test
    name: in-cluster
  syncPolicy:
    automated: {}
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
  ignoreDifferences:
    - group: apps
      kind: StatefulSet
      jqPathExpressions:
        - '.spec.volumeClaimTemplates[]?'
---
apiVersion: secrets.infisical.com/v1alpha1
kind: InfisicalSecret
metadata:
  # Name of this InfisicalSecret resource
  name: backblace-readwrite
  namespace: plex-test
#  annotations:
#    argocd.argoproj.io/sync-wave: "1"
#    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  resyncInterval: 60
  authentication:
    serviceToken:
      serviceTokenSecretReference:
        secretName: 'infisical-service-token'
        secretNamespace: 'infisical-operator-system'
      secretsScope:
        envSlug: dev
        secretsPath: "/plex/backblaze-readwrite"
  managedSecretReference:
    secretName: backblaze-readwrite2 # <-- the name of kubernetes secret that will be created
    secretNamespace: plex-test # <-- where the kubernetes secret should be created