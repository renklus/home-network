# Backup: on k8s host: sudo k3s kubectl exec --stdin --tty paperless-ngx-webserver-7c9fcb467-wzrls -n paperless-ngx -- /bin/bash
# then run: document_exporter --use-filename-format --use-folder-prefix --no-thumbnail --delete /usr/src/backup-target
apiVersion: v1
kind: Namespace
metadata:
  name: paperless-ngx
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: paperless-ngx-webserver
  namespace: paperless-ngx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: paperless-ngx-webserver
  template:
    metadata:
      labels:
        app: paperless-ngx-webserver
    spec:
      containers:
        - name: webserver
          image: ghcr.io/paperless-ngx/paperless-ngx:latest@sha256:321ca858e4b6ce9dc416dbcb7c0691d545e3e9b0f44cf420f75c22098854ca25
          ports:
            - containerPort: 8000
          env:
            - name: PAPERLESS_URL
              value: "https://paperless.paperless-ngx.k8s.renklus.ch"
            - name: PAPERLESS_REDIS
              value: "redis://paperless-ngx-broker.paperless-ngx.svc.k8s2.home.arpa:6379"
            - name: PAPERLESS_EMPTY_TRASH_DELAY
              value: "1800" #5 years
            #   # must exist before configuring this setting (could be helpful: https://docs.paperless-ngx.com/advanced_usage/#custom-container-initialization)
            # - name: PAPERLESS_EMPTY_TRASH_DIR
            #   value: "/usr/src/paperless/trash-empty-dir" # storage of PDFs after trash was emptied
            - name: PAPERLESS_FILENAME_FORMAT
              value: "{{ created_year }}/{{ correspondent }}/{{ created }} - {{ title }} - {{ doc_pk }}"
            #   # https://docs.paperless-ngx.com/configuration/#PAPERLESS_ENABLE_FLOWER
            - name: PAPERLESS_ENABLE_FLOWER
              value: "SET"
            - name: PAPERLESS_CONSUMER_POLLING
              value: "30" # seconds
            - name: PAPERLESS_CONSUMER_POLLING_RETRY_COUNT
              value: "10"
            - name: PAPERLESS_OCR_LANGUAGE
              value: "deu+eng"
            - name: PAPERLESS_TIME_ZONE
              value: "Europe/Zurich"
            - name: PAPERLESS_DATE_PARSER_LANGUAGES
              value: "de-CH+en-CH"
            #   # set to birth date. Do through hashicorp for privacy
            # - name: PAPERLESS_IGNORE_DATES
            #   value: ""
          volumeMounts:
            - name: 'paperless-ngx-webserver'
              mountPath: /usr/src/paperless/data
              subPath: data
            - name: 'paperless-ngx-webserver'
              mountPath: /usr/src/paperless/media
              subPath: media
            - name: 'paperless-ngx-webserver-consume'
              mountPath: /usr/src/paperless/consume
            - name: 'paperless-ngx-webserver-backup-target'
              mountPath: /usr/src/backup-target
          resources:
            limits:
              cpu: 0.4
          startupProbe:
            httpGet:
              path: /
              port: 8000
            failureThreshold: 60
            periodSeconds: 10
      volumes:
        - name: 'paperless-ngx-webserver'
          persistentVolumeClaim:
            claimName: 'paperless-ngx-pvc'
        - name: 'paperless-ngx-webserver-consume'
          persistentVolumeClaim:
            claimName: 'consume'
        - name: 'paperless-ngx-webserver-backup-target'
          persistentVolumeClaim:
            claimName: 'backup-target'
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: paperless-ngx-broker
  namespace: paperless-ngx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: paperless-ngx-broker
  template:
    metadata:
      labels:
        app: paperless-ngx-broker
    spec:
      containers:
        - name: broker
          image: docker.io/library/redis:8@sha256:4521b581dbddea6e7d81f8fe95ede93f5648aaa66a9dacd581611bf6fe7527bd
          volumeMounts:
            - name: 'paperless-ngx-broker'
              mountPath: '/data'
              subPath: 'redisdata'
      volumes:
        - name: 'paperless-ngx-broker'
          persistentVolumeClaim:
            claimName: 'paperless-ngx-pvc'
---
apiVersion: v1
kind: Service
metadata:
  name: paperless-ngx-broker
  namespace: paperless-ngx
spec:
  selector:
    app: paperless-ngx-broker
  ports:
    - name: paperless-ngx-broker
      port: 6379
---
apiVersion: v1
kind: Service
metadata:
  name: paperless-ngx-webserver
  namespace: paperless-ngx
spec:
  selector:
    app: paperless-ngx-webserver
  type: LoadBalancer
  ports:
    - name: paperless-ngx-webserver
      port: 80
      targetPort: 8000
---
apiVersion: v1
kind: Service
metadata:
  name: paperless-ngx-flower
  namespace: paperless-ngx
spec:
  selector:
    app: paperless-ngx-webserver
  type: LoadBalancer
  ports:
    - name: paperless-ngx-flower
      port: 80
      targetPort: 5555
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: 'paperless-ngx-pvc'
  namespace: 'paperless-ngx'
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: 'csi-nfs'
  resources:
    requests:
      storage: 40Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: 'consume'
  namespace: 'paperless-ngx'
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: 'csi-nfs-strong-named'
  resources:
    requests:
      storage: 500Mi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: 'backup-target'
  namespace: 'paperless-ngx'
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: 'csi-nfs-strong-named'
  resources:
    requests:
      storage: 100Gi