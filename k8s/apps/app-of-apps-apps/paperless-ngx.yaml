apiVersion: v1
kind: Namespace
metadata:
  name: paperless-ngx
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: paperless-ngx-webserver
  namespace: paperless-ngx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: paperless-ngx-webserver
  template:
    metadata:
      labels:
        app: paperless-ngx-webserver
    spec:
      containers:
        - name: webserver
          image: ghcr.io/paperless-ngx/paperless-ngx:latest
          ports:
            - containerPort: 8000
          env:
            - name: PAPERLESS_URL
              value: "https://paperless.paperless-ngx.k8s.renklus.ch"
            - name: PAPERLESS_REDIS
              value: "redis://paperless-ngx-broker.paperless-ngx.svc.k8s2.home.arpa:6379"
            - name: PAPERLESS_EMPTY_TRASH_DELAY
              value: "1800" #5 years
            #   # must exist before configuring this setting (could be helpful: https://docs.paperless-ngx.com/advanced_usage/#custom-container-initialization)
            # - name: PAPERLESS_EMPTY_TRASH_DIR
            #   value: "/usr/src/paperless/trash-empty-dir" # storage of PDFs after trash was emptied
            - name: PAPERLESS_FILENAME_FORMAT
              value: "{{ created_year }}/{{ correspondent }}/{{ created }} - {{ title }} - {{ doc_pk }}"
            #   # https://docs.paperless-ngx.com/configuration/#PAPERLESS_ENABLE_FLOWER
            # - name: PAPERLESS_ENABLE_FLOWER
            #   value: ""
            - name: PAPERLESS_OCR_LANGUAGE
              value: "deu+eng"
          volumeMounts:
            - name: 'paperless-ngx-webserver'
              mountPath: /usr/src/paperless/data
              subPath: data
            - name: 'paperless-ngx-webserver'
              mountPath: /usr/src/paperless/media
              subPath: media
          resources:
            limits:
              cpu: 0.4
      volumes:
        - name: 'paperless-ngx-webserver'
          persistentVolumeClaim:
            claimName: 'paperless-ngx-pvc'
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: paperless-ngx-broker
  namespace: paperless-ngx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: paperless-ngx-broker
  template:
    metadata:
      labels:
        app: paperless-ngx-broker
    spec:
      containers:
        - name: broker
          image: docker.io/library/redis:8
          volumeMounts:
            - name: 'paperless-ngx-broker'
              mountPath: '/data'
              subPath: 'redisdata'
      volumes:
        - name: 'paperless-ngx-broker'
          persistentVolumeClaim:
            claimName: 'paperless-ngx-pvc'
---
apiVersion: v1
kind: Service
metadata:
  name: paperless-ngx-broker
  namespace: paperless-ngx
spec:
  selector:
    app: paperless-ngx-broker
  ports:
    - name: paperless-ngx-broker
      port: 6379
---
apiVersion: v1
kind: Service
metadata:
  name: paperless-ngx-webserver
  namespace: paperless-ngx
spec:
  selector:
    app: paperless-ngx-webserver
  type: LoadBalancer
  ports:
    - name: paperless-ngx-webserver
      port: 80
      targetPort: 8000
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: 'paperless-ngx-pvc'
  namespace: 'paperless-ngx'
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: 'csi-nfs'
  resources:
    requests:
      storage: 10Mi