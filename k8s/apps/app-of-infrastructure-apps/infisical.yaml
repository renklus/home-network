apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: infisical
  namespace: argocd
  finalizers:
  - resources-finalizer.argocd.argoproj.io
spec:
  project: 'default'
  source:
    repoURL: 'https://dl.cloudsmith.io/public/infisical/helm-charts/helm/charts'
    chart: 'infisical'
    targetRevision: '0.4.2'
    helm:
      parameters:
        - name: 'ingress.nginx.enabled'
          value: 'true'
  destination:
    namespace: infisical-system
    name: in-cluster
  syncPolicy:
    automated: {}
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
# workaround for argcod problem (leave until https://github.com/argoproj/argo-cd/issues/11143#issuecomment-1664144190 is done)
  ignoreDifferences:
  - group: 'apps'
    kind: 'StatefulSet'
    name: 'mongodb'
    jqPathExpressions:
      - '.spec.volumeClaimTemplates[]?'
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: infisical-operator
  namespace: argocd
  finalizers:
  - resources-finalizer.argocd.argoproj.io
spec:
  project: 'default'
  source:
    repoURL: 'https://dl.cloudsmith.io/public/infisical/helm-charts/helm/charts'
    chart: 'secrets-operator'
    targetRevision: '0.3.3'
  destination:
    namespace: infisical-system
    name: in-cluster
  syncPolicy:
    automated: {}
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
#---
#apiVersion: v1
#kind: Namespace
#metadata:
#  name: infisical-operator-system
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: infisical-config
  namespace: infisical-system
data:
  hostAPI: http://infisical-ingress-nginx-controller.infisical-system.k8s.renklus.ch/api # <-- global hostAPI
---
apiVersion: secrets.infisical.com/v1alpha1
kind: InfisicalSecret
metadata:
  # Name of of this InfisicalSecret resource
  name: infisicalsecret-sample
  namespace: infisical-system
spec:
  resyncInterval: 60
  authentication:
    serviceToken:
      serviceTokenSecretReference:
        secretName: 'infisical-service-token'
        secretNamespace: infisical-system
      secretsScope:
        envSlug: dev
        secretsPath: "/"
  managedSecretReference:
    secretName: managed-secret # <-- the name of kubernetes secret that will be created
    secretNamespace: infisical-system # <-- where the kubernetes secret should be created
---
apiVersion: v1
kind: Secret
metadata:
  name: infisical-service-token
  namespace: infisical-system
data:
  infisicalToken: 'Xc3QuNjVhYjhiMjU5NGE4ZGQyNzFkMmY3ODU5LmFlMWZiNzA1Mzg5MDA2YjIzOWZmOGNlZGNhNjgzODYxLmY1ODFlYzE2NTNhMGYzNDBjZjgyOTc1MzZiOTljNDcz' # 'not-populated' (name: service-token-1)
